<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lanbin Leo</title>
  
  <subtitle>初中生的成长日记</subtitle>
  <link href="https://blog.lanbin.top/rss.xml" rel="self"/>
  
  <link href="https://blog.lanbin.top/"/>
  <updated>2024-10-22T11:06:54.419Z</updated>
  <id>https://blog.lanbin.top/</id>
  
  <author>
    <name>Leo Huo</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于开源的一些随笔</title>
    <link href="https://blog.lanbin.top/p/9e0fb3e9.html"/>
    <id>https://blog.lanbin.top/p/9e0fb3e9.html</id>
    <published>2024-07-15T19:53:03.000Z</published>
    <updated>2024-10-22T11:06:54.419Z</updated>
    
    <content type="html"><![CDATA[<p>许多人虽然从事开源项目，但对开源协议的具体规定理解仍然较为模糊。他们依然会本能地认为这些项目是属于自己的，尽管已经开源，但仍觉得使用权限由自己决定，最终解释权归自己所有。然而，开源并不是这样的。</p><p>对于市面上几乎所有的主流开源协议，如MIT、Apache、GPL等，当你选择开源时，意味着任何人都可以自由复制、使用、修改、分发你的代码。而且，注意，这并不要求必须在GitHub上点击fork才算符合协议的复制。任何形式的复制，包括将源代码打包传到自己的网站上，都是合法合规的。当然，每个协议在修改时都有其特定的规定，大多数协议要求保留原协议和署名，这里暂且不提。</p><p>但如果仅仅是复制你的开源代码并放在其他地方，是完全没有问题的。即使使用了你的用户名，用户名也不受法律保护。然而，这一切的前提是代码具有开源协议。有些人认为在GitHub上公开的仓库不都是开源代码，这种看法是错误的。公开源代码和开源是两个不同的概念。</p><p>开源的核心不是那些公开的源代码，而是规定源代码如何使用的协议，即仓库中最不起眼的许可证文件。有了这个文件，项目才是开源的；没有这个文件，即使源代码完全公开，也不能自由使用。公开的源代码放在路边，也不能随便拿走，就像在路边遇到一个人，也不能随意接触。</p><p>因此，即使那些有开源协议的代码你可以直接拿来放在自己网站上，但那些没有开源协议的代码，你不能随意复制和分发，这样做是侵权的。当然，我们这里讨论的是理论上的规定，实际操作中可能会遇到许多复杂因素，比如某人抄袭了你在GitHub上的项目，你打算起诉他，但对方可能会问你GitHub是什么，你如何登录等，这些问题可能会使事情变得复杂。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;许多人虽然从事开源项目，但对开源协议的具体规定理解仍然较为模糊。他们依然会本能地认为这些项目是属于自己的，尽管已经开源，但仍觉得使用权限由自己决定，最终解释权归自己所有。然而，开源并不是这样的。&lt;/p&gt;
&lt;p&gt;对于市面上几乎所有的主流开源协议，如MIT、Apache、GPL</summary>
      
    
    
    
    <category term="随笔" scheme="https://blog.lanbin.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="Github" scheme="https://blog.lanbin.top/tags/Github/"/>
    
    <category term="开源" scheme="https://blog.lanbin.top/tags/%E5%BC%80%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title>Tap To Midi | 用键盘敲击鼓点生成MIDI文件</title>
    <link href="https://blog.lanbin.top/p/70975104.html"/>
    <id>https://blog.lanbin.top/p/70975104.html</id>
    <published>2024-03-18T18:10:02.000Z</published>
    <updated>2024-10-22T11:06:54.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>最近参加了“清澜好声音”需要扒谱一首音乐作为伴奏，沙克负责了旋律部分，将打击乐部分交给了我。由于找不到完美匹配的MIDI文件，于是我自己动手，花了一点时间写了一个能够通过敲击键盘来记录鼓点，并导出为MIDI文件的程序。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>我请ChatGPT编写了一个简单的Python程序，它允许用户通过敲击键盘的空格键来模拟鼓点。程序记录下每次击打的时间点，并将它们转换成MIDI格式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mido</span><br><span class="line"><span class="keyword">from</span> mido <span class="keyword">import</span> MidiFile, MidiTrack, Message</span><br><span class="line"><span class="keyword">import</span> keyboard</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">bpm = <span class="number">120</span>  <span class="comment"># 设置BPM</span></span><br><span class="line">beats_per_second = bpm / <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Press and hold SPACE to start recording. Release to stop.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        keyboard.wait(<span class="string">&#x27;space&#x27;</span>)</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        times = []</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Recording... Press SPACE to mark the beat. Press ESC to finish.&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                keyboard.wait(<span class="string">&#x27;space&#x27;</span>)</span><br><span class="line">                times.append(time.time() - start_time)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;Beat!&quot;</span>)</span><br><span class="line">                <span class="keyword">if</span> keyboard.is_pressed(<span class="string">&#x27;esc&#x27;</span>):</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        mid = MidiFile()</span><br><span class="line">        track = MidiTrack()</span><br><span class="line">        mid.tracks.append(track)</span><br><span class="line">        track.append(Message(<span class="string">&#x27;program_change&#x27;</span>, program=<span class="number">12</span>, time=<span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">        last_time = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> times:</span><br><span class="line">            ticks = <span class="built_in">int</span>(mido.second2tick(t - last_time, mid.ticks_per_beat, mido.bpm2tempo(bpm)))</span><br><span class="line">            track.append(Message(<span class="string">&#x27;note_on&#x27;</span>, note=<span class="number">36</span>, velocity=<span class="number">64</span>, time=ticks))</span><br><span class="line">            track.append(Message(<span class="string">&#x27;note_off&#x27;</span>, note=<span class="number">36</span>, velocity=<span class="number">64</span>, time=<span class="number">0</span>))</span><br><span class="line">            last_time = t</span><br><span class="line"></span><br><span class="line">        midi_file_name = <span class="string">&quot;drum_beat.mid&quot;</span></span><br><span class="line">        mid.save(midi_file_name)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;MIDI file saved as <span class="subst">&#123;midi_file_name&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h2 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h2><ol><li><p>初始化：首先，我们设置了BPM（每分钟节拍数），然后准备接收用户的输入。</p></li><li><p>记录鼓点：程序使用<code>keyboard</code>库等待用户按下空格键开始录制，并记录每次按键的时间点。</p></li><li><p>生成MIDI：一旦录制完成，我们将这些时间点转换成MIDI格式。每个时间点被转换成一个鼓点音符（MIDI标准中的36号音符），并根据其在录制中的时间安排在MIDI文件中。</p></li><li><p>导出MIDI文件：最后，程序将所有的MIDI消息保存到一个轨道中，并将该轨道添加到MIDI文件中。然后将文件保存到本地磁盘。</p></li></ol><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><p>通过使用这个程序，我们可以准确地记录下想要的鼓点，并转换成MIDI文件。如果你有任何需要自定义MIDI鼓点的需求，feel free to try this code!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;最近参加了“清澜好声音”需要扒谱一首音乐作为伴奏，沙克负责了旋律部分，将打击乐部分交给了我。由于找不到完美匹配的MIDI文件，于是我自己动手</summary>
      
    
    
    
    <category term="代码" scheme="https://blog.lanbin.top/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="Python" scheme="https://blog.lanbin.top/tags/Python/"/>
    
    <category term="Music" scheme="https://blog.lanbin.top/tags/Music/"/>
    
  </entry>
  
  <entry>
    <title>2024 ACSL中级组第三轮编程解析</title>
    <link href="https://blog.lanbin.top/p/eed79f2.html"/>
    <id>https://blog.lanbin.top/p/eed79f2.html</id>
    <published>2024-03-17T16:30:50.000Z</published>
    <updated>2024-10-22T11:06:54.419Z</updated>
    
    <content type="html"><![CDATA[<p>今天考了ACSL中级组第三轮，题目还是比较有意思的。是关于Rack-O游戏的模拟。</p><p>根据题目比较机翻的描述：Rack-O游戏是一种纸牌游戏，玩家需要在牌架上摆放卡牌，并且在抽取卡牌堆中的卡牌时，按照一定的规则进行替换。这次的题目就是要求我们模拟这个游戏的过程，并且计算最后的得分。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>在 ACSL 版的 Rack-O 游戏中，玩家会被告知卡槽数量 s，以及卡牌数量 n。每张卡牌上都有一个在 1 到 n 之间（包括 1 和 n）的专属数字。玩家将会收到 s 张卡牌，然后将这些卡牌从前至后摆放在牌架上。除此之外，玩家还会收到一叠卡牌，形成一个抽牌堆，按照卡牌叠放顺序依次抽牌。如果牌架上的卡牌未按升序排列，那么对于每一张抽到的卡牌都要按以下顺序遵循下列规则：</p><ol><li><p>除牌架上第一张卡牌之外，如果抽到的卡牌的数字比在牌架上某一张卡牌上的数字小 1，则用这张抽到的卡牌替换牌架上这张牌前面的卡牌。</p></li><li><p>除牌架上最后一张卡牌之外，如果抽到的卡牌的数字比牌架上某一张卡牌上的数字大 1，则用这张抽到的牌替换牌架上这张牌后面的卡牌。</p></li><li><p>对于牌架上任意三张在相邻卡槽中的卡牌，如果在中间位置的卡牌上的数字并不介于这三张中第一张卡牌和最后一张卡牌的数字之间，但抽到的卡牌上的数字介于其间，则用抽到的卡牌替换在中间位置的卡牌。</p></li><li><p>如果抽到的卡牌比牌架上第二张卡牌小且牌架上第一张卡牌比第二张卡牌大，则用抽到的卡牌替换牌架上第一张卡牌。</p></li><li><p>如果抽到的卡牌比牌架上倒数第二张卡牌大且牌架上最后一张卡牌比倒数第二张卡牌小，则用抽到的卡牌替换最后一张卡牌。</p></li><li><p>否则，放弃使用抽到的卡牌，抽取下一张。</p></li></ol><p>如果牌架上出现 3 张或更多张数字连续的卡牌，那么这些数字连续的卡牌每张都可以再加上5 分的奖励分。例如，如果牌架上出现数字 45、46、47，就可以额外加上 15 分的奖励分；如果牌架上出现数字 3、4、5、6，就可以额外加上 20 分的奖励分。但是，如果抽牌堆中的卡牌全部抽取完毕，但牌架上的所有卡牌未按升序排列，那么牌架值将会等于牌架上卡牌数字 递减 次数的相反数。举例来说，如果牌架上的卡牌数字序列为 40、47、20、56、15、16、17，那么数字 47 之后紧接着是较小的数字 20，数字 56 之后紧接着是较小的数字 15，这两次递减都会计入次数。并且，由于牌架上所有卡牌未按升序排列，因此 15, 16, 17 不计奖励分。所以最后牌架值等于 -2 。</p><table><thead><tr><th>输入数据</th><th>输出数据</th></tr></thead><tbody><tr><td>10 60 <br> 40 35 20 56 32 58 42 17 45 34 <br> 31 44 10 28 19 46 7 37 16 2</td><td>341</td></tr><tr><td>15 90 <br> 15 12 18 9 28 17 46 51 7 53 65 70 74 84 47 <br> 45 73 3 52 54 16 21 44 87 40 68 30 20</td><td>752</td></tr><tr><td>12 130 <br> 20 110 30 16 84 40 91 69 75 7 81 15 <br> 39 47 114 55 35 71 25 123 51 23 34 10 77 36 115</td><td>656</td></tr><tr><td>8 100 <br> 6 13 47 62 32 70 76 12 <br> 3 67 80 10 39 44 2 43 40 85 21 33 4 52</td><td>421</td></tr><tr><td>12 110 <br> 44 35 22 25 79 100 85 69 87 3 56 28 <br> 97 10 48 43 42 21 81 47 86 88 80 54 24 50</td><td>-1</td></tr></tbody></table><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Rank-O游戏模拟</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">checkIfEnd</span>(<span class="params">rank</span>):</span><br><span class="line">    <span class="comment"># 如果rank是升序排列的，返回True</span></span><br><span class="line">    <span class="keyword">if</span> rank == <span class="built_in">sorted</span>(rank):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">calcBonus</span>(<span class="params">rank</span>):</span><br><span class="line">    bonus = <span class="number">0</span></span><br><span class="line">    consecutive_count = <span class="number">1</span>  <span class="comment"># 记录当前连续卡牌的数量</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(rank)):</span><br><span class="line">        <span class="keyword">if</span> rank[i] == rank[i-<span class="number">1</span>] + <span class="number">1</span>:</span><br><span class="line">            consecutive_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> consecutive_count &gt;= <span class="number">3</span>:  <span class="comment"># 如果有3张或更多连续卡牌</span></span><br><span class="line">                bonus += consecutive_count * <span class="number">5</span></span><br><span class="line">            consecutive_count = <span class="number">1</span>  <span class="comment"># 重置连续卡牌计数</span></span><br><span class="line">    <span class="keyword">if</span> consecutive_count &gt;= <span class="number">3</span>:  <span class="comment"># 最后一组连续卡牌的处理</span></span><br><span class="line">        bonus += consecutive_count * <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算牌架未按升序排列时的情况</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">sorted</span>(rank) != rank:  <span class="comment"># 如果牌架未按升序排列</span></span><br><span class="line">        decrement_count = <span class="built_in">sum</span>(<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(rank)) <span class="keyword">if</span> rank[i] &lt; rank[i-<span class="number">1</span>])</span><br><span class="line">        bonus = -decrement_count</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bonus</span><br><span class="line"></span><br><span class="line">s, n = <span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split())</span><br><span class="line">rank = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line">heap = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>, <span class="built_in">input</span>().split()))</span><br><span class="line"></span><br><span class="line">current_card = <span class="number">0</span></span><br><span class="line">use = <span class="number">0</span></span><br><span class="line">times = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> checkIfEnd(rank) <span class="keyword">and</span> times &lt; n:</span><br><span class="line">    times += <span class="number">1</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        current_card = heap.pop(<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="comment"># print(rank, &quot;C&quot;,current_card, &quot;U&quot;, use)</span></span><br><span class="line"></span><br><span class="line">    flag = <span class="literal">False</span> <span class="comment"># 是否有满足的条件</span></span><br><span class="line">    use = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(rank)):</span><br><span class="line">        <span class="keyword">if</span> i != <span class="number">0</span> <span class="keyword">and</span> current_card == rank[i] - <span class="number">1</span>:</span><br><span class="line">            rank[i - <span class="number">1</span>] = current_card</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            use = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag: <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(rank)):</span><br><span class="line">        <span class="keyword">if</span> i != <span class="built_in">len</span>(rank) - <span class="number">1</span> <span class="keyword">and</span> current_card == rank[i] + <span class="number">1</span>:</span><br><span class="line">            rank[i + <span class="number">1</span>] = current_card</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            use = <span class="number">2</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag: <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(rank)):</span><br><span class="line">        <span class="keyword">if</span> i != <span class="number">0</span> <span class="keyword">and</span> i != <span class="built_in">len</span>(rank) - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> current_card &gt; rank[i - <span class="number">1</span>] <span class="keyword">and</span> current_card &lt; rank[i + <span class="number">1</span>] <span class="keyword">and</span> (rank[i] &lt; rank[i - <span class="number">1</span>] <span class="keyword">or</span> rank[i] &gt; rank[i + <span class="number">1</span>]):</span><br><span class="line">                rank[i] = current_card</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">                use = <span class="number">3</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag: <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(rank)):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">1</span> <span class="keyword">and</span> current_card &lt; rank[<span class="number">1</span>] <span class="keyword">and</span> rank[<span class="number">0</span>] &gt; rank[<span class="number">1</span>]:</span><br><span class="line">            rank[<span class="number">0</span>] = current_card</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            use = <span class="number">4</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag: <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(rank)):</span><br><span class="line">        <span class="keyword">if</span> i == <span class="built_in">len</span>(rank) - <span class="number">2</span> <span class="keyword">and</span> current_card &gt; rank[-<span class="number">2</span>] <span class="keyword">and</span> rank[-<span class="number">1</span>] &lt; rank[-<span class="number">2</span>]:</span><br><span class="line">            rank[-<span class="number">1</span>] = current_card</span><br><span class="line">            flag = <span class="literal">True</span></span><br><span class="line">            use = <span class="number">5</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag: <span class="keyword">continue</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">points = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> checkIfEnd(rank):</span><br><span class="line">    points = calcBonus(rank)+<span class="built_in">sum</span>(rank)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    points = calcBonus(rank)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(points)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也就是把这个代码写完了昂</p><p><img src="/../assets/240317-acsl-answer/1.png" alt="alt text"></p><p>过的非常干脆利索，没有任何问题。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然过的干脆利落，但是我最后答完题后流连于监考会议室，没有正确摆放监考设备，被监考老师抓住了，拉到讨论室里说了一顿，我连忙展示我已经完成了题目，我也不知道最后结果如何，希望能过吧，实在不行就找组委会讲理去。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;今天考了ACSL中级组第三轮，题目还是比较有意思的。是关于Rack-O游戏的模拟。&lt;/p&gt;
&lt;p&gt;根据题目比较机翻的描述：Rack-O游戏是一种纸牌游戏，玩家需要在牌架上摆放卡牌，并且在抽取卡牌堆中的卡牌时，按照一定的规则进行替换。这次的题目就是要求我们模拟这个游戏的过程，</summary>
      
    
    
    
    <category term="代码" scheme="https://blog.lanbin.top/categories/%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="ACSL" scheme="https://blog.lanbin.top/tags/ACSL/"/>
    
    <category term="Python" scheme="https://blog.lanbin.top/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>添情</title>
    <link href="https://blog.lanbin.top/p/a4bbf5c1.html"/>
    <id>https://blog.lanbin.top/p/a4bbf5c1.html</id>
    <published>2024-03-17T11:16:14.000Z</published>
    <updated>2024-10-22T11:06:54.419Z</updated>
    
    <content type="html"><![CDATA[<p>旧时只言冬晴好，<br>今日却盼春满城。<br>待到杨絮纷吹去，<br>风雨晴中风雨情。</p><p>In days of yore, we praised the clear winter sky,<br>Now we long for spring to fill the city wide.<br>Awaiting when the willow fluffs have blown away,<br>Through storms and calm, our bond remains, come what may.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;旧时只言冬晴好，&lt;br&gt;今日却盼春满城。&lt;br&gt;待到杨絮纷吹去，&lt;br&gt;风雨晴中风雨情。&lt;/p&gt;
&lt;p&gt;In days of yore, we praised the clear winter sky,&lt;br&gt;Now we long for spring to fill t</summary>
      
    
    
    
    <category term="随笔" scheme="https://blog.lanbin.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="Poem" scheme="https://blog.lanbin.top/tags/Poem/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Github 自动部署和一些踩坑经验</title>
    <link href="https://blog.lanbin.top/p/97df2bec.html"/>
    <id>https://blog.lanbin.top/p/97df2bec.html</id>
    <published>2024-03-17T10:39:55.000Z</published>
    <updated>2024-10-22T11:06:54.419Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>这两天在捣鼓Hexo博客。我就在想，如果每次写完博客，我该如何发布到网上去呢？我第一个想到的就是Github pages的静态文件托管，但是每次都要手动执行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>，这样太麻烦了。于是我就想到了Github Actions。</p><h2 id="配置分享"><a href="#配置分享" class="headerlink" title="配置分享"></a>配置分享</h2><p>在经过了无数次的失败后，我终于成功了。我将我的配置分享出来，希望对你有所帮助。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span>  <span class="comment"># 或者你使用的是master分支，就改为master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;21&#x27;</span> <span class="comment"># 可以根据需要选择Node.js的版本</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">dependencies</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">~/.npm</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          $&#123;&#123; runner.os &#125;&#125;-node-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install hexo -g</span></span><br><span class="line"><span class="string">        npm install</span></span><br><span class="line"><span class="string">        git clone https://github.com/saicaca/hexo-theme-vivia.git themes/vivia</span></span><br><span class="line"><span class="string">        npm install colorjs.io stylus hexo-symbols-count-time</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">static</span> <span class="string">pages</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span>  <span class="comment"># Hexo默认生成的目录</span></span><br></pre></td></tr></table></figure><p>这个actions比较好看懂。</p><ol><li>首先是<code>on</code>，表示在什么时候执行这个actions。这里是在push到main分支的时候执行。</li><li><code>jobs</code>就是你这个actions要执行的任务。这里只有一个任务，叫<code>deploy</code>。</li><li><code>runs-on</code>表示这个任务要在什么环境下执行。这里是在ubuntu-latest下执行。</li><li><code>steps</code>就是这个任务要执行的步骤。这里有6个步骤。<ul><li><code>actions/checkout@v2</code>是用来checkout代码的（其实我也不知道有啥用）。</li><li><code>actions/setup-node@v1</code>是用来安装Node.js的，版本按照你的需求修改。</li><li><code>actions/cache@v2</code>是用来缓存依赖的，如果你的主机上已经有了依赖，就不用再安装了。</li><li><code>npm install</code>是用来安装依赖的，这个地方要根据不同的主题做定制化的修改，我这里是vivia。</li><li><code>hexo generate</code>是用来生成博客静态文件的。</li><li><code>peaceiris/actions-gh-pages@v3</code>是用来将你的静态文件发布到Github Pages上的。</li></ul></li></ol><h2 id="踩坑！"><a href="#踩坑！" class="headerlink" title="踩坑！"></a>踩坑！</h2><p>有一些小的容易踩坑的点，比如如果发现每次部署之后自定义pages域名被刷掉了，可以在<code>source</code>文件夹中添加CNAME文件，这样就可以保证每次部署之后自定义pages域名不会被刷掉（hexo会复制这个文件到部署目录）。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这两天在捣鼓Hexo博客。我就在想，如果每次写完博客，我该如何发布到网上去呢？我第一个想到的就是Github pages的静态文件托管，但是</summary>
      
    
    
    
    <category term="经验" scheme="https://blog.lanbin.top/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="Blog" scheme="https://blog.lanbin.top/tags/Blog/"/>
    
    <category term="Hexo" scheme="https://blog.lanbin.top/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.lanbin.top/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="https://blog.lanbin.top/p/4a17b156.html"/>
    <id>https://blog.lanbin.top/p/4a17b156.html</id>
    <published>2024-03-16T16:17:03.000Z</published>
    <updated>2024-10-22T11:06:54.419Z</updated>
    
    <content type="html"><![CDATA[<p>Long lost.<br>I picked up my pen again.<br>The story of the past let it be dusted off and<br>No one will ever know again.</p><p>Standing on the heights of stone<br>I realized I couldn’t see<br>My past, my footprints<br>My lost time and youth</p><p>The fields ahead are still turquoise<br>The mountains are still high when I look back</p><p>And I kneel in reverence<br>Mary told me.<br>“Child, write.<br>“before the truth is lost in the abyss.<br>“before the future is still hopeful.<br>Remember what was first.<br>–It’s the only way. “</p><p>久违了。<br>我再次拿起笔。<br>过去的故事，就让它尘封起来吧，而且<br>再无人知晓。</p><p>站在石头的高处<br>我发现我看不见<br>我的过去，我的足迹<br>我逝去的时光和青春</p><p>前方的田野依然碧绿<br>蓦然回首，高山依旧</p><p>我虔诚地跪下<br>玛丽告诉我<br>“孩子，写吧<br>“在真相迷失在深渊之前<br>“在未来还充满希望之前<br>记住最初的一切<br>–这是唯一的办法 “</p><p>再见，Halo。<br>愿下次见面，你还是少年。<br>你好，Hexo。<br>愿往后余生，你还在身边。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Long lost.&lt;br&gt;I picked up my pen again.&lt;br&gt;The story of the past let it be dusted off and&lt;br&gt;No one will ever know again.&lt;/p&gt;
&lt;p&gt;Standing</summary>
      
    
    
    
    <category term="随笔" scheme="https://blog.lanbin.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="Blog" scheme="https://blog.lanbin.top/tags/Blog/"/>
    
    <category term="Theme" scheme="https://blog.lanbin.top/tags/Theme/"/>
    
  </entry>
  
</feed>
